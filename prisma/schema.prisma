// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//env("DATABASE_URL")

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

// enum Role {
//   STUDENT
//   LEADER
//   ADMIN
// }

// model Account {
//   id                 String  @id @default(cuid())
//   userId             String
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?
//   access_token       String?
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?
//   session_state      String?
//   oauth_token_secret String?
//   oauth_token        String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   accounts      Account[]
//   sessions      Session[]
//   role          Role      @default(STUDENT)
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

enum Gender {
  Male
  Female
  Other
}

enum Funding {
  NSFAS
  Cash
}

enum Building {
  EightOn6th
  TwentyTwoOnHeugh
  FourOnMilitary
  SixteenOnJetty
  EighteenOnStrand
  ThreeOnMill
  FiveFourNineOnGovan
  FiveSevenFiveOnGovan
  TenOnSmart
  OneSixThreeOnDurban
}

model Student {
  studentNumber String   @unique
  idNumber      String   @unique
  fullName      String
  gender        Gender
  building      Building @default(OneSixThreeOnDurban)
  roomNumber    String
  funding       Funding  @default(NSFAS)
  contactNumber String   @db.VarChar(10)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  visits        Visit[]
}

model Visit {
  id                   String   @id @default(uuid())
  visitorName          String
  visitorIdNumber      String
  visitorNumber        String?  @db.VarChar(10)
  visitDate            DateTime
  visitationReason     String
  approvedBy           String
  recipientStdntNumber String
  recipient            Student  @relation(fields: [recipientStdntNumber], references: [studentNumber], onDelete: Cascade)
}
